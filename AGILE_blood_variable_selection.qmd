---
title: "Untitled"
format: html
---

## using machine learning approaches (sPLS-DA and randomforest) to indentify features that discriminate treatment arms at each timepont
```{r}
library(mixOmics)
library(dplyr)
library(tidyr)
```


```{r}
setwd("c:/Users/dan_m/OneDrive - University College London/UCL_Senior_Research_Fellow/AGILE/Blood/sub_clustering")
blood_df <- readRDS("AGILE_blood_dataframe.rds")
```


```{r}
exp_by_donor <- blood_df %>% pivot_longer(names_to="marker", values_to="expression", cols=c(1:31))
exp_by_donor <- exp_by_donor %>% group_by(donor,time_new,treatment,marker) %>% summarise(median = median(expression), .groups="drop")
```

```{r}
# 1. Get all timepoints
timepoints <- unique(exp_by_donor$time_new)

# 2. Initialize list to hold top markers per timepoint
top_markers_by_time <- list()
loading_plots <- list()
embedding_plots <- list()

# 3. Loop through each timepoint
for (tp in timepoints) {
  cat("Processing timepoint:", tp, "\n")
  
  # Prep data for this timepoint
  marker_data_tp <- exp_by_donor %>%
    filter(time_new == tp) %>%
    dplyr::select(donor, treatment, marker, median) %>%
    pivot_wider(names_from = marker, values_from = median)
  
  # Remove rows with NA (if any donor is missing a marker)
  marker_data_tp <- marker_data_tp %>% drop_na()
  
  # Prepare X and Y
  X <- marker_data_tp %>% dplyr::select(-donor, -treatment) %>% as.matrix()
  Y <- factor(marker_data_tp$treatment)
  
  # Optional: tune keepX (skip if consistent number of markers is fine)
  keepX <- 10  # or use tune.splsda to set dynamically
  
  # Run sPLS-DA
  splsda_res <- splsda(X, Y, ncomp = 2, keepX = keepX)
  
  # Extract top markers
  top_vars <- selectVar(splsda_res, comp = 1)$name
  top_markers_by_time[[tp]] <- top_vars

  p_embed <- plotIndiv(splsda_res, comp = c(1,2), group = Y, legend = TRUE,
                       title = paste("sPLS-DA:", tp),
                       ellipse = TRUE, star = F, cex = 2.5, pch = 16,
                       col=c("mediumseagreen", "darkorchid2"))

  plot_obj <- plotLoadings(splsda_res, comp = 1, method = "mean", contrib = "max",
                           title = paste("Top markers at", tp),
                           legend.color=c("mediumseagreen", "darkorchid2"),
                           size.name = 2)

embedding_plots[[tp]] <- p_embed
  loading_plots[[tp]] <- plot_obj
}

# Combine into a dataframe
top_markers_df <- stack(top_markers_by_time) %>%
  rename(marker = values, timepoint = ind)

print(top_markers_df)
```
